@using KnaagdierenMarktGame.Shared
@using KnaagdierenMarktGame.Client.Classes
@inject GameState gameState

<Header Title="Final score" MainTextType="EndScreen" SmallHeaderText="@(PlayerScores.Aggregate((a, b) => b.Value < a.Value ? a : b ).Key.Name)" />

@for (int x = 1; x <= PlayerScores.Count(); x++)
{
    <p>@($"{x} place: {PlayerScores[x].Key.Name} with {PlayerScores[x].Value} points")</p>
}

@code {

    public List<KeyValuePair<Player, int>> PlayerScores { get { return GetPlayerScores(); } }

    public List<KeyValuePair<Player, int>> GetPlayerScores()
    {
        List<KeyValuePair<Player, int>> PlayerScores = new List<KeyValuePair<Player, int>>();
        foreach (Player player in gameState.Players)
        {
            List<AnimalCard> differentAnimalCards = player.AnimalCards.Distinct().ToList();
            int score = differentAnimalCards.Sum(AnimalCard => AnimalCard.Value) * differentAnimalCards.Count();
            PlayerScores.Add(new KeyValuePair<Player, int>(player, score));
        }
        PlayerScores = PlayerScores.OrderByDescending(playerscore => playerscore.Value).ToList();
        return PlayerScores;
    }
}
