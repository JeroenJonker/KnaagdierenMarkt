@foreach (int moneyType in MoneyCards.Distinct().OrderBy(a => a).ToList())
{
    <div >
        <MoneySelector MoneyCardAmount="moneyType" TotalAmount="MoneyCards.Count(a => a == moneyType)" OnAmountChanged="UpdateChosenMoneyCards" />
    </div>
}

@code {
    [Parameter]
    public List<int> MoneyCards { get; set; } = new List<int>();

    [Parameter]
    public Dictionary<int, int> ChosenMoneyCards { get; set; } = new Dictionary<int, int>();

    [Parameter]
    public EventCallback<Dictionary<int, int>> ChosenMoneyCardsChanged { get; set; }

    public async Task UpdateChosenMoneyCards(KeyValuePair<int,int> chosenMoneyCards)
    {
        int Amount = chosenMoneyCards.Value;
        int MoneyCard = chosenMoneyCards.Key;
        if (Amount > 0)
        {
            if (ChosenMoneyCards.ContainsKey(MoneyCard))
            {
                ChosenMoneyCards[MoneyCard] = Amount;
            }
            else
            {
                ChosenMoneyCards.Add(MoneyCard, Amount);
            }
        }
        else if (ChosenMoneyCards.ContainsKey(MoneyCard))
        {
            ChosenMoneyCards.Remove(MoneyCard);
        }
        await ChosenMoneyCardsChanged.InvokeAsync(ChosenMoneyCards);
    }

}
